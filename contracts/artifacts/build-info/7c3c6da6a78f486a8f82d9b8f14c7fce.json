{
	"id": "7c3c6da6a78f486a8f82d9b8f14c7fce",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/10_Mapping.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\ncontract Mapping {\n    mapping(address => uint) balanceOf;\n    mapping(address => mapping(address => bool)) isFriend;\n\n    function examples() external {\n        balanceOf[msg.sender] = 123;\n        uint bal = balanceOf[msg.sender];\n        // default balance value\n        uint bal2 = balanceOf[address(1)]; // 0\n        // modify balance value\n        balanceOf[msg.sender] += 456; // 123 + 456\n        delete balanceOf[msg.sender]; // the value of index msg.sender euqal to 0\n        isFriend[msg.sender][address(this)] = true; // set the caller and the contract as friends\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/10_Mapping.sol": {
				"Mapping": {
					"abi": [
						{
							"inputs": [],
							"name": "examples",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/10_Mapping.sol\":57:641  contract Mapping {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/10_Mapping.sol\":57:641  contract Mapping {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x335d00c2\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/10_Mapping.sol\":180:639  function examples() external {... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      stop\n    tag_5:\n        /* \"contracts/10_Mapping.sol\":243:246  123 */\n      0x7b\n        /* \"contracts/10_Mapping.sol\":219:228  balanceOf */\n      0x00\n        /* \"contracts/10_Mapping.sol\":219:240  balanceOf[msg.sender] */\n      dup1\n        /* \"contracts/10_Mapping.sol\":229:239  msg.sender */\n      caller\n        /* \"contracts/10_Mapping.sol\":219:240  balanceOf[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/10_Mapping.sol\":219:246  balanceOf[msg.sender] = 123 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/10_Mapping.sol\":256:264  uint bal */\n      0x00\n        /* \"contracts/10_Mapping.sol\":267:276  balanceOf */\n      dup1\n        /* \"contracts/10_Mapping.sol\":267:288  balanceOf[msg.sender] */\n      0x00\n        /* \"contracts/10_Mapping.sol\":277:287  msg.sender */\n      caller\n        /* \"contracts/10_Mapping.sol\":267:288  balanceOf[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/10_Mapping.sol\":256:288  uint bal = balanceOf[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/10_Mapping.sol\":331:340  uint bal2 */\n      0x00\n        /* \"contracts/10_Mapping.sol\":343:352  balanceOf */\n      dup1\n        /* \"contracts/10_Mapping.sol\":343:364  balanceOf[address(1)] */\n      0x00\n        /* \"contracts/10_Mapping.sol\":361:362  1 */\n      0x01\n        /* \"contracts/10_Mapping.sol\":343:364  balanceOf[address(1)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/10_Mapping.sol\":331:364  uint bal2 = balanceOf[address(1)] */\n      swap1\n      pop\n        /* \"contracts/10_Mapping.sol\":436:439  456 */\n      0x01c8\n        /* \"contracts/10_Mapping.sol\":411:420  balanceOf */\n      0x00\n        /* \"contracts/10_Mapping.sol\":411:432  balanceOf[msg.sender] */\n      dup1\n        /* \"contracts/10_Mapping.sol\":421:431  msg.sender */\n      caller\n        /* \"contracts/10_Mapping.sol\":411:432  balanceOf[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/10_Mapping.sol\":411:439  balanceOf[msg.sender] += 456 */\n      dup3\n      dup3\n      sload\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/10_Mapping.sol\":469:478  balanceOf */\n      0x00\n        /* \"contracts/10_Mapping.sol\":469:490  balanceOf[msg.sender] */\n      dup1\n        /* \"contracts/10_Mapping.sol\":479:489  msg.sender */\n      caller\n        /* \"contracts/10_Mapping.sol\":469:490  balanceOf[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/10_Mapping.sol\":462:490  delete balanceOf[msg.sender] */\n      0x00\n      swap1\n      sstore\n        /* \"contracts/10_Mapping.sol\":582:586  true */\n      0x01\n        /* \"contracts/10_Mapping.sol\":544:552  isFriend */\n      dup1\n        /* \"contracts/10_Mapping.sol\":544:564  isFriend[msg.sender] */\n      0x00\n        /* \"contracts/10_Mapping.sol\":553:563  msg.sender */\n      caller\n        /* \"contracts/10_Mapping.sol\":544:564  isFriend[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/10_Mapping.sol\":544:579  isFriend[msg.sender][address(this)] */\n      0x00\n        /* \"contracts/10_Mapping.sol\":573:577  this */\n      address\n        /* \"contracts/10_Mapping.sol\":544:579  isFriend[msg.sender][address(this)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/10_Mapping.sol\":544:586  isFriend[msg.sender][address(this)] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/10_Mapping.sol\":209:639  {... */\n      pop\n      pop\n        /* \"contracts/10_Mapping.sol\":180:639  function examples() external {... */\n      jump\t// out\n        /* \"#utility.yul\":7:312   */\n    tag_8:\n        /* \"#utility.yul\":47:50   */\n      0x00\n        /* \"#utility.yul\":66:86   */\n      tag_11\n        /* \"#utility.yul\":84:85   */\n      dup3\n        /* \"#utility.yul\":66:86   */\n      tag_12\n      jump\t// in\n    tag_11:\n        /* \"#utility.yul\":61:86   */\n      swap2\n      pop\n        /* \"#utility.yul\":100:120   */\n      tag_13\n        /* \"#utility.yul\":118:119   */\n      dup4\n        /* \"#utility.yul\":100:120   */\n      tag_12\n      jump\t// in\n    tag_13:\n        /* \"#utility.yul\":95:120   */\n      swap3\n      pop\n        /* \"#utility.yul\":254:255   */\n      dup3\n        /* \"#utility.yul\":186:252   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":182:256   */\n      sub\n        /* \"#utility.yul\":179:180   */\n      dup3\n        /* \"#utility.yul\":176:257   */\n      gt\n        /* \"#utility.yul\":173:280   */\n      iszero\n      tag_14\n      jumpi\n        /* \"#utility.yul\":260:278   */\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n        /* \"#utility.yul\":173:280   */\n    tag_14:\n        /* \"#utility.yul\":304:305   */\n      dup3\n        /* \"#utility.yul\":301:302   */\n      dup3\n        /* \"#utility.yul\":297:306   */\n      add\n        /* \"#utility.yul\":290:306   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:312   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":318:395   */\n    tag_12:\n        /* \"#utility.yul\":355:362   */\n      0x00\n        /* \"#utility.yul\":384:389   */\n      dup2\n        /* \"#utility.yul\":373:389   */\n      swap1\n      pop\n        /* \"#utility.yul\":318:395   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":401:581   */\n    tag_16:\n        /* \"#utility.yul\":449:526   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":446:447   */\n      0x00\n        /* \"#utility.yul\":439:527   */\n      mstore\n        /* \"#utility.yul\":546:550   */\n      0x11\n        /* \"#utility.yul\":543:544   */\n      0x04\n        /* \"#utility.yul\":536:551   */\n      mstore\n        /* \"#utility.yul\":570:574   */\n      0x24\n        /* \"#utility.yul\":567:568   */\n      0x00\n        /* \"#utility.yul\":560:575   */\n      revert\n\n    auxdata: 0xa2646970667358221220dab9dc5a74f8ad4ccf206c05df371988e5c6b39f29b053bc13920b047d40ae9564736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506102fb806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063335d00c214610030575b600080fd5b61003861003a565b005b607b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000806000600173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506101c86000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546101559190610236565b925050819055506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000905560018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60006102418261028c565b915061024c8361028c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561028157610280610296565b5b828201905092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea2646970667358221220dab9dc5a74f8ad4ccf206c05df371988e5c6b39f29b053bc13920b047d40ae9564736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FB DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x335D00C2 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x3A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x7B PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH2 0x1C8 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x155 SWAP2 SWAP1 PUSH2 0x236 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x241 DUP3 PUSH2 0x28C JUMP JUMPDEST SWAP2 POP PUSH2 0x24C DUP4 PUSH2 0x28C JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x281 JUMPI PUSH2 0x280 PUSH2 0x296 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA 0xB9 0xDC GAS PUSH21 0xF8AD4CCF206C05DF371988E5C6B39F29B053BC1392 SIGNEXTEND DIV PUSH30 0x40AE9564736F6C6343000807003300000000000000000000000000000000 ",
							"sourceMap": "57:584:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@examples_63": {
									"entryPoint": 58,
									"id": 63,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"checked_add_t_uint256": {
									"entryPoint": 566,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 652,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 662,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:584:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "51:261:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "61:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "84:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "66:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "66:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "61:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "95:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "118:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "100:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "100:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "95:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "258:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "260:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "260:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "260:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "179:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "186:66:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "254:1:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "182:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "182:74:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "176:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "176:81:1"
															},
															"nodeType": "YulIf",
															"src": "173:107:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "290:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "301:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "304:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "297:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "297:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "290:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "38:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "41:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "47:3:1",
														"type": ""
													}
												],
												"src": "7:305:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "363:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "373:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "384:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "373:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "345:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "355:7:1",
														"type": ""
													}
												],
												"src": "318:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "429:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "446:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "449:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "439:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "439:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "439:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "543:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "546:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "536:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "536:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "536:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "567:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "570:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "560:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "560:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "560:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "401:180:1"
											}
										]
									},
									"contents": "{\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063335d00c214610030575b600080fd5b61003861003a565b005b607b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000806000600173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506101c86000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546101559190610236565b925050819055506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000905560018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60006102418261028c565b915061024c8361028c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561028157610280610296565b5b828201905092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea2646970667358221220dab9dc5a74f8ad4ccf206c05df371988e5c6b39f29b053bc13920b047d40ae9564736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x335D00C2 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x3A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x7B PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH2 0x1C8 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x155 SWAP2 SWAP1 PUSH2 0x236 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x241 DUP3 PUSH2 0x28C JUMP JUMPDEST SWAP2 POP PUSH2 0x24C DUP4 PUSH2 0x28C JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x281 JUMPI PUSH2 0x280 PUSH2 0x296 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA 0xB9 0xDC GAS PUSH21 0xF8AD4CCF206C05DF371988E5C6B39F29B053BC1392 SIGNEXTEND DIV PUSH30 0x40AE9564736F6C6343000807003300000000000000000000000000000000 ",
							"sourceMap": "57:584:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;180:459;;;:::i;:::-;;;243:3;219:9;:21;229:10;219:21;;;;;;;;;;;;;;;:27;;;;256:8;267:9;:21;277:10;267:21;;;;;;;;;;;;;;;;256:32;;331:9;343;:21;361:1;343:21;;;;;;;;;;;;;;;;331:33;;436:3;411:9;:21;421:10;411:21;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;469:9;:21;479:10;469:21;;;;;;;;;;;;;;;462:28;;;582:4;544:8;:20;553:10;544:20;;;;;;;;;;;;;;;:35;573:4;544:35;;;;;;;;;;;;;;;;:42;;;;;;;;;;;;;;;;;;209:430;;180:459::o;7:305:1:-;47:3;66:20;84:1;66:20;:::i;:::-;61:25;;100:20;118:1;100:20;:::i;:::-;95:25;;254:1;186:66;182:74;179:1;176:81;173:107;;;260:18;;:::i;:::-;173:107;304:1;301;297:9;290:16;;7:305;;;;:::o;318:77::-;355:7;384:5;373:16;;318:77;;;:::o;401:180::-;449:77;446:1;439:88;546:4;543:1;536:15;570:4;567:1;560:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "152600",
								"executionCost": "196",
								"totalCost": "152796"
							},
							"external": {
								"examples()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 641,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 57,
									"end": 641,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 57,
									"end": 641,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 57,
									"end": 641,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 57,
									"end": 641,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 641,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 57,
									"end": 641,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 641,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 57,
									"end": 641,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 641,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 641,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 57,
									"end": 641,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 641,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 57,
									"end": 641,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 57,
									"end": 641,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 641,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 641,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 641,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 641,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 57,
									"end": 641,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 641,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dab9dc5a74f8ad4ccf206c05df371988e5c6b39f29b053bc13920b047d40ae9564736f6c63430008070033",
									".code": [
										{
											"begin": 57,
											"end": 641,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 641,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 641,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 641,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 641,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 641,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57,
											"end": 641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 641,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 641,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 641,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 641,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 641,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 641,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57,
											"end": 641,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 641,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 641,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 641,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 641,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 641,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 57,
											"end": 641,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 57,
											"end": 641,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 57,
											"end": 641,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 641,
											"name": "PUSH",
											"source": 0,
											"value": "335D00C2"
										},
										{
											"begin": 57,
											"end": 641,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 57,
											"end": 641,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 641,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 641,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 641,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 641,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 180,
											"end": 639,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 180,
											"end": 639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 180,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 180,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 180,
											"end": 639,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 180,
											"end": 639,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 180,
											"end": 639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 180,
											"end": 639,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 180,
											"end": 639,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 180,
											"end": 639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 243,
											"end": 246,
											"name": "PUSH",
											"source": 0,
											"value": "7B"
										},
										{
											"begin": 219,
											"end": 228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 219,
											"end": 240,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 229,
											"end": 239,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 219,
											"end": 240,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 219,
											"end": 240,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 219,
											"end": 240,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 219,
											"end": 240,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 219,
											"end": 240,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 219,
											"end": 240,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 219,
											"end": 240,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 219,
											"end": 240,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 219,
											"end": 240,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 219,
											"end": 240,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 219,
											"end": 240,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 219,
											"end": 240,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 219,
											"end": 240,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 219,
											"end": 240,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 219,
											"end": 240,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 219,
											"end": 246,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 219,
											"end": 246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 219,
											"end": 246,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 219,
											"end": 246,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 256,
											"end": 264,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 267,
											"end": 276,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 267,
											"end": 288,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 277,
											"end": 287,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 267,
											"end": 288,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 267,
											"end": 288,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 267,
											"end": 288,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 267,
											"end": 288,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 267,
											"end": 288,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 267,
											"end": 288,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 267,
											"end": 288,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 267,
											"end": 288,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 267,
											"end": 288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 267,
											"end": 288,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 267,
											"end": 288,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 267,
											"end": 288,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 267,
											"end": 288,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 267,
											"end": 288,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 267,
											"end": 288,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 267,
											"end": 288,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 256,
											"end": 288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 256,
											"end": 288,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 331,
											"end": 340,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 343,
											"end": 352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 343,
											"end": 364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 361,
											"end": 362,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 343,
											"end": 364,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 343,
											"end": 364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 343,
											"end": 364,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 343,
											"end": 364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 343,
											"end": 364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 343,
											"end": 364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 343,
											"end": 364,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 343,
											"end": 364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 343,
											"end": 364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 343,
											"end": 364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 343,
											"end": 364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 343,
											"end": 364,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 343,
											"end": 364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 343,
											"end": 364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 343,
											"end": 364,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 343,
											"end": 364,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 331,
											"end": 364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 331,
											"end": 364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 436,
											"end": 439,
											"name": "PUSH",
											"source": 0,
											"value": "1C8"
										},
										{
											"begin": 411,
											"end": 420,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 432,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 421,
											"end": 431,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 411,
											"end": 432,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 411,
											"end": 432,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 411,
											"end": 432,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 411,
											"end": 432,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 411,
											"end": 432,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 411,
											"end": 432,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 411,
											"end": 432,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 432,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 411,
											"end": 432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 411,
											"end": 432,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 411,
											"end": 432,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 411,
											"end": 432,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 432,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 411,
											"end": 432,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 432,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 411,
											"end": 432,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 439,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 411,
											"end": 439,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 411,
											"end": 439,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 411,
											"end": 439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 411,
											"end": 439,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 411,
											"end": 439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 411,
											"end": 439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 411,
											"end": 439,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 439,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 411,
											"end": 439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 411,
											"end": 439,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 411,
											"end": 439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 411,
											"end": 439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 411,
											"end": 439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 411,
											"end": 439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 411,
											"end": 439,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 411,
											"end": 439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 469,
											"end": 478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 469,
											"end": 490,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 479,
											"end": 489,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 469,
											"end": 490,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 469,
											"end": 490,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 469,
											"end": 490,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 469,
											"end": 490,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 469,
											"end": 490,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 469,
											"end": 490,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 469,
											"end": 490,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 469,
											"end": 490,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 469,
											"end": 490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 469,
											"end": 490,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 469,
											"end": 490,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 469,
											"end": 490,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 469,
											"end": 490,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 469,
											"end": 490,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 469,
											"end": 490,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 462,
											"end": 490,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 462,
											"end": 490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 462,
											"end": 490,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 582,
											"end": 586,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 544,
											"end": 552,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 544,
											"end": 564,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 553,
											"end": 563,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 544,
											"end": 564,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 544,
											"end": 564,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 544,
											"end": 564,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 544,
											"end": 564,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 544,
											"end": 564,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 544,
											"end": 564,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 544,
											"end": 564,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 544,
											"end": 564,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 544,
											"end": 564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 544,
											"end": 564,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 544,
											"end": 564,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 544,
											"end": 564,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 544,
											"end": 564,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 544,
											"end": 564,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 544,
											"end": 564,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 544,
											"end": 579,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 573,
											"end": 577,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 544,
											"end": 579,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 544,
											"end": 579,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 544,
											"end": 579,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 544,
											"end": 579,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 544,
											"end": 579,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 544,
											"end": 579,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 544,
											"end": 579,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 544,
											"end": 579,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 544,
											"end": 579,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 544,
											"end": 579,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 544,
											"end": 579,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 544,
											"end": 579,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 544,
											"end": 579,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 544,
											"end": 579,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 544,
											"end": 579,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 544,
											"end": 579,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 544,
											"end": 586,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 544,
											"end": 586,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 544,
											"end": 586,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 544,
											"end": 586,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 544,
											"end": 586,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 544,
											"end": 586,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 544,
											"end": 586,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 544,
											"end": 586,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 544,
											"end": 586,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 544,
											"end": 586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 544,
											"end": 586,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 544,
											"end": 586,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 544,
											"end": 586,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 544,
											"end": 586,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 544,
											"end": 586,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 544,
											"end": 586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 544,
											"end": 586,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 544,
											"end": 586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 209,
											"end": 639,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 209,
											"end": 639,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 180,
											"end": 639,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 312,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 7,
											"end": 312,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 47,
											"end": 50,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 66,
											"end": 86,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 84,
											"end": 85,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 66,
											"end": 86,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 66,
											"end": 86,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 66,
											"end": 86,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 66,
											"end": 86,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 61,
											"end": 86,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 61,
											"end": 86,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 100,
											"end": 120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 118,
											"end": 119,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 100,
											"end": 120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 100,
											"end": 120,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 100,
											"end": 120,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 100,
											"end": 120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 95,
											"end": 120,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 95,
											"end": 120,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 254,
											"end": 255,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 186,
											"end": 252,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 182,
											"end": 256,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 179,
											"end": 180,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 176,
											"end": 257,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 173,
											"end": 280,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 173,
											"end": 280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 173,
											"end": 280,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 260,
											"end": 278,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 260,
											"end": 278,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 260,
											"end": 278,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 260,
											"end": 278,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 260,
											"end": 278,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 173,
											"end": 280,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 173,
											"end": 280,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 304,
											"end": 305,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 301,
											"end": 302,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 297,
											"end": 306,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 290,
											"end": 306,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 290,
											"end": 306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 312,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 312,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 312,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 312,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 312,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 318,
											"end": 395,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 318,
											"end": 395,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 355,
											"end": 362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 384,
											"end": 389,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 373,
											"end": 389,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 373,
											"end": 389,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 318,
											"end": 395,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 318,
											"end": 395,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 318,
											"end": 395,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 318,
											"end": 395,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 401,
											"end": 581,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 401,
											"end": 581,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 449,
											"end": 526,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 446,
											"end": 447,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 439,
											"end": 527,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 546,
											"end": 550,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 543,
											"end": 544,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 536,
											"end": 551,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 570,
											"end": 574,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 567,
											"end": 568,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 560,
											"end": 575,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"examples()": "335d00c2"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"examples\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/10_Mapping.sol\":\"Mapping\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/10_Mapping.sol\":{\"keccak256\":\"0xb04ade90034eda3ee41595fc2c040529a7458fbee6d68c0bbb982e9e2e73b51b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2a56092de53024c11e2e80e57eadbe20a9cdc651b08766fcb501c1d906b65d0\",\"dweb:/ipfs/QmUvFVc5peTStezEmfoALtNZUGs1QbbqrpBtf5pezcF3VG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 5,
								"contract": "contracts/10_Mapping.sol:Mapping",
								"label": "balanceOf",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 11,
								"contract": "contracts/10_Mapping.sol:Mapping",
								"label": "isFriend",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n  --> contracts/10_Mapping.sol:10:9:\n   |\n10 |         uint bal = balanceOf[msg.sender];\n   |         ^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 264,
					"file": "contracts/10_Mapping.sol",
					"start": 256
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n  --> contracts/10_Mapping.sol:12:9:\n   |\n12 |         uint bal2 = balanceOf[address(1)]; // 0\n   |         ^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 340,
					"file": "contracts/10_Mapping.sol",
					"start": 331
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/10_Mapping.sol": {
				"ast": {
					"absolutePath": "contracts/10_Mapping.sol",
					"exportedSymbols": {
						"Mapping": [
							64
						]
					},
					"id": 65,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 64,
							"linearizedBaseContracts": [
								64
							],
							"name": "Mapping",
							"nameLocation": "66:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "balanceOf",
									"nameLocation": "105:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 64,
									"src": "80:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 4,
										"keyType": {
											"id": 2,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "88:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "80:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 3,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "99:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 11,
									"mutability": "mutable",
									"name": "isFriend",
									"nameLocation": "165:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 64,
									"src": "120:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 10,
										"keyType": {
											"id": 6,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "128:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "120:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 9,
											"keyType": {
												"id": 7,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "147:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "139:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 8,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "158:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "209:430:0",
										"statements": [
											{
												"expression": {
													"id": 19,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 14,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "219:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 17,
														"indexExpression": {
															"expression": {
																"id": 15,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "229:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 16,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "229:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "219:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "313233",
														"id": 18,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "243:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_123_by_1",
															"typeString": "int_const 123"
														},
														"value": "123"
													},
													"src": "219:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 20,
												"nodeType": "ExpressionStatement",
												"src": "219:27:0"
											},
											{
												"assignments": [
													22
												],
												"declarations": [
													{
														"constant": false,
														"id": 22,
														"mutability": "mutable",
														"name": "bal",
														"nameLocation": "261:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 62,
														"src": "256:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 21,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "256:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 27,
												"initialValue": {
													"baseExpression": {
														"id": 23,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "267:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 26,
													"indexExpression": {
														"expression": {
															"id": 24,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "277:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 25,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "277:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "267:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "256:32:0"
											},
											{
												"assignments": [
													29
												],
												"declarations": [
													{
														"constant": false,
														"id": 29,
														"mutability": "mutable",
														"name": "bal2",
														"nameLocation": "336:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 62,
														"src": "331:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 28,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "331:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 36,
												"initialValue": {
													"baseExpression": {
														"id": 30,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "343:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 35,
													"indexExpression": {
														"arguments": [
															{
																"hexValue": "31",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "361:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "353:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "353:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "353:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "343:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "331:33:0"
											},
											{
												"expression": {
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 37,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "411:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 40,
														"indexExpression": {
															"expression": {
																"id": 38,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "421:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "421:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "411:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "343536",
														"id": 41,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "436:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_456_by_1",
															"typeString": "int_const 456"
														},
														"value": "456"
													},
													"src": "411:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "411:28:0"
											},
											{
												"expression": {
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "462:28:0",
													"subExpression": {
														"baseExpression": {
															"id": 44,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "469:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 47,
														"indexExpression": {
															"expression": {
																"id": 45,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "479:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 46,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "479:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "469:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "462:28:0"
											},
											{
												"expression": {
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 50,
																"name": "isFriend",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "544:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 57,
															"indexExpression": {
																"expression": {
																	"id": 51,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "553:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "553:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "544:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 58,
														"indexExpression": {
															"arguments": [
																{
																	"id": 55,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "573:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Mapping_$64",
																		"typeString": "contract Mapping"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Mapping_$64",
																		"typeString": "contract Mapping"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "565:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "565:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "565:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "544:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 59,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "582:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "544:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 61,
												"nodeType": "ExpressionStatement",
												"src": "544:42:0"
											}
										]
									},
									"functionSelector": "335d00c2",
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "examples",
									"nameLocation": "189:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "197:2:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "209:0:0"
									},
									"scope": 64,
									"src": "180:459:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 65,
							"src": "57:584:0",
							"usedErrors": []
						}
					],
					"src": "32:609:0"
				},
				"id": 0
			}
		}
	}
}